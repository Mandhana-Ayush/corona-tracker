{"version":3,"sources":["Components/reducer.js","Components/Fetch.js","Components/Header.js","Components/utils/Sorter.js","Components/LineGraph.js","Components/Map.js","Components/StatsDisplay.js","Components/CountryList.js","Components/HeaderVaccine.js","Components/LineGraph_vaccine.js","Components/utils/DateCreator.js","Components/SideBar.js","Components/sidebarContent.js","Components/utils/sorter_vaccine.js","Components/StatsDisplay_vaccine.js","Components/Comp1.js","Components/App.js","index.js"],"names":["initialState","countryData","singleCountryInfo","historicalData","country","caseValue","center","zoom","vaccineCountryList","country_vaccine","singleCountry_data_vaccine","reducer","state","action","type","payload","fetchCountryName_n_Data","a","fetch","resp","fetch_Stats_singleCountry","fetch_state_worldwide","fetch_graph_data","fetch_graph_data_country","fetchVaccineData","fetchVaccine_CountryWise","fetchVaccine_worldwide","Header","dispatch","useContext","CounterDispatchContext","CounterStateContext","className","FormControl","Select","variant","value","onChange","e","target","MenuItem","map","item","countryInfo","iso2","_id","SorterGraphData","array","v","i","caseTypeColors","hex","multiplier","ShowDataOnMap","Circle","lat","long","fillColor","color","radius","Math","sqrt","fillOpacity","Popup","style","backgroundImage","flag","continent","numeral","cases","format","recovered","deaths","LineGraph","sortedData","evaluate_type","date","data","useState","isdataPresent","setisDataPresent","isdataPresent_country","setisDataPresent_country","useEffect","then","json","Object","keys","forEach","key","timeline","labels","datasets","label","backgroundColor","borderColor","pointRadius","Mapx","refContainer","useRef","zoomContainer","current","TileLayer","attribution","url","StatsDisplay","data1","data2","data3","React","id","onClick","CountryList","sortedCountryData","sort","b","HeaderVaccine","LineGraph_vaccine","vaccine_data_sorted","DateCreator","d","Date","setDate","getDate","moment","SideBar","content","sidebarContent","sortedList","StatsDisplay_vaccine","stats","setStats","Comp1","isToggleOn","todayCases","todayRecovered","todayDeaths","createContext","App","useReducer","setIsToggleOn","Provider","CSSTransition","in","timeout","classNames","Index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92c3d7cb.chunk.js","sourcesContent":["export const initialState = {\r\n  countryData:[],\r\n  singleCountryInfo:[],\r\n  historicalData:[],\r\n  country:'worldwide',\r\n  caseValue:\"CoronaVirus Cases\",\r\n  center:[51.505,-0.09],\r\n  zoom:3,\r\n  vaccineCountryList:[],\r\n  country_vaccine:'worldwide',\r\n  singleCountry_data_vaccine:[]\r\n}\r\n\r\nexport function reducer(state, action) {\r\n\r\n  switch (action.type) {\r\n    case \"country_info\":\r\n      return{\r\n        ...state,\r\n        countryData:action.payload\r\n      }\r\n    case \"single_country_info\":\r\n      return {\r\n        ...state,\r\n        singleCountryInfo:action.payload\r\n      }\r\n    case \"historicalData\":\r\n      return {\r\n        ...state,\r\n        historicalData:action.payload\r\n      }\r\n    case \"country\":\r\n      return {\r\n        ...state, \r\n        country:action.payload\r\n      }\r\n    case \"casesValue\":\r\n      return {\r\n        ...state,\r\n        caseValue:action.payload,\r\n      }\r\n    case \"map_location\":\r\n      return{\r\n        ...state,\r\n        center:action.payload,\r\n      }\r\n    case \"map_zoomLevel\":\r\n      return{\r\n        ...state,\r\n        zoom:action.zoom\r\n      }\r\n    case \"worldwide_VaccineInfo\":\r\n      return {\r\n        ...state, \r\n        vaccineCountryList:action.payload\r\n      }\r\n    case \"Vaccine_country\":\r\n      return {\r\n        ...state,\r\n        country_vaccine: action.payload\r\n      }\r\n    case \"singleCountryInfo_vaccine\":\r\n      return {\r\n        ...state,\r\n        singleCountry_data_vaccine: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import { useContext } from \"react\"\r\n\r\nexport const fetchCountryName_n_Data = async()=>{\r\n  \r\n  const resp = await fetch(\"https://disease.sh/v3/covid-19/countries\");\r\n  return resp;\r\n}\r\n\r\nexport const fetch_Stats_singleCountry = async(country)=>{\r\n  const resp = await fetch(`https://disease.sh/v3/covid-19/countries/${country}?strict=true\r\n  `);\r\n\r\n  return resp;\r\n}\r\n\r\nexport const fetch_state_worldwide = async(country)=>{\r\n  const resp = await fetch(\"https://disease.sh/v3/covid-19/all\");\r\n  return resp;\r\n}\r\n\r\nexport const fetch_graph_data = async()=>{\r\n  const resp = await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\");\r\n  return resp;\r\n}\r\n\r\nexport const fetch_graph_data_country = async(country)=>{\r\n  const resp = await fetch(`https://disease.sh/v3/covid-19/historical/${country}?lastdays=all`);\r\n  return resp;\r\n}\r\n\r\n////....................///.....................////\r\n\r\nexport const fetchVaccineData = async()=>{\r\n  const resp = await fetch('https://disease.sh/v3/covid-19/vaccine/coverage/countries?lastdays=all&fullData=false');\r\n  return resp;\r\n}\r\n\r\nexport const fetchVaccine_CountryWise = async(country) =>{\r\n  const resp = await fetch(`https://disease.sh/v3/covid-19/vaccine/coverage/countries/${country}?lastdays=all&fullData=false`);\r\n  return resp;\r\n}\r\n\r\nexport const fetchVaccine_worldwide = async()=>{\r\n  const resp = await fetch('https://disease.sh/v3/covid-19/vaccine/coverage?lastdays=all&fullData=false');\r\n  return resp;\r\n}","import React, { useContext } from 'react'\r\nimport {FormControl , Select, MenuItem} from \"@material-ui/core\"\r\nimport { CounterDispatchContext, CounterStateContext } from './App'\r\n\r\nconst Header = ()=>{\r\n  const dispatch = useContext(CounterDispatchContext);\r\n  const state = useContext(CounterStateContext);\r\n  const {countryData} = state;\r\n  return (\r\n    \r\n    <div className = \"header\">\r\n      <div className=\"header__name\">COVID TRACKER</div>\r\n      <div className=\"header__dropdown\">\r\n        <FormControl className = \"header__dropdown_material\">\r\n          \r\n          <Select  variant = \"outlined\" value = {state.country} onChange = {e=>{\r\n            dispatch({\r\n              type: 'country',\r\n              payload:e.target.value});\r\n              \r\n          }}>\r\n            <MenuItem value = \"worldwide\">WorldWide</MenuItem>\r\n            {countryData.map((item)=>{\r\n              return <MenuItem \r\n              value ={item.countryInfo.iso2} \r\n              key ={item.country._id}>\r\n                {item.country} \r\n              \r\n              </MenuItem>\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Circle, Popup } from \"react-leaflet\";\r\nimport numeral from 'numeral';\r\nimport { useContext } from 'react';\r\n\r\nimport { CounterStateContext } from '../App';\r\n\r\nexport const Sorter = (array)=>{\r\n  let sortedArray = array.sort((a,b)=>{\r\n    if(a.cases>b.cases){\r\n      return -1;\r\n    }\r\n    else{\r\n      return 1;\r\n    }\r\n  })\r\n\r\n  return sortedArray;\r\n}\r\n\r\nexport const SorterGraphData = (array)=>{\r\n\r\n  let sortedArray = array.map((v,i,a) => {\r\n    let item = v- (a[i-1] || 0);\r\n    if(item>=0){\r\n      return item;\r\n    }\r\n    else{\r\n      return (-1* item)\r\n    }\r\n  })\r\n  \r\n  return sortedArray;\r\n}\r\n\r\nconst caseTypeColors = {\r\n  \"CoronaVirus Cases\":{\r\n    hex:\"#CC1034\",\r\n    multiplier:8000\r\n  },\r\n\r\n  \"Recovered\":{\r\n    hex:\"#7dd1d\",\r\n    multiplier:12000\r\n  },\r\n\r\n  \"Deaths\":{\r\n    hex:\"#fb4443\",\r\n    multiplier:20000\r\n  }\r\n}\r\n\r\nconst caseValueConvertor = (caseValue)=>{\r\n  if(caseValue === \"CoronaVirus Cases\"){\r\n    return \"cases\";\r\n  }\r\n  else if(caseValue === \"Recovered\"){\r\n    return \"recovered\";\r\n  }\r\n  else if(caseValue === \"Deaths\"){\r\n    return \"deaths\"\r\n  }\r\n}\r\nexport const ShowDataOnMap = () =>{\r\n  const state = useContext(CounterStateContext);\r\n  let value = caseValueConvertor(state.caseValue);\r\n  const {countryData} = state;\r\n\r\n  return (\r\n    countryData.map((country)=>{\r\n\r\n      return (\r\n      <>\r\n        <Circle\r\n          center = {[country.countryInfo.lat, country.countryInfo.long]}\r\n          fillColor = {caseTypeColors[state.caseValue].hex}\r\n          color = {caseTypeColors[state.caseValue].hex}\r\n          radius = {Math.sqrt(country[value] * caseTypeColors[state.caseValue].multiplier)}\r\n          fillOpacity = {0.4}\r\n          >\r\n\r\n            <Popup>\r\n              <div>\r\n                <div  className = \"info-flag\" style = {{backgroundImage :`url(${country.countryInfo.flag})`}}></div>\r\n              \r\n              <div>{country.country}, {country.continent}</div>\r\n              <div>Cases: {numeral(country.cases).format(\"0,0\")}</div>\r\n              <div>Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\r\n              <div>Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\r\n            </div>\r\n            </Popup>\r\n          </Circle>  \r\n      </>\r\n      )\r\n    })\r\n  )\r\n\r\n}\r\n\r\n","import React,{useContext, useEffect, useState} from 'react'\r\nimport { CounterDispatchContext, CounterStateContext } from './App'\r\nimport {fetch_graph_data, fetch_graph_data_country} from './Fetch'\r\nimport { SorterGraphData } from './utils/Sorter';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nconst LineGraph = () => {\r\n\r\n  let date = [];\r\n  let data = [];\r\n  let sortedData = [];\r\n\r\n\r\n  const [isdataPresent, setisDataPresent] = useState(false)\r\n  const [isdataPresent_country,setisDataPresent_country] = useState(false);\r\n\r\n  const state = useContext(CounterStateContext);\r\n  const dispatch = useContext(CounterDispatchContext);\r\n  \r\n  let evaluate_type;\r\n\r\n  if(state.caseValue === \"CoronaVirus Cases\"){\r\n    evaluate_type = \"cases\"\r\n  }\r\n  else if(state.caseValue === \"Recovered\"){\r\n    evaluate_type = \"recovered\"\r\n  }\r\n  else if(state.caseValue === \"Deaths\"){\r\n    evaluate_type = \"deaths\"\r\n  }\r\n\r\n  useEffect(()=>{ \r\n    setisDataPresent_country(false);\r\n    if(state.country === \"worldwide\"){\r\n      fetch_graph_data()\r\n      .then((resp)=>{\r\n        return resp.json();\r\n      })\r\n      .then((data)=>{\r\n        dispatch({\r\n          type:\"historicalData\",\r\n          payload:data\r\n        })\r\n        setisDataPresent(true);\r\n      })}\r\n\r\n    else{\r\n      setisDataPresent(false);\r\n      fetch_graph_data_country(state.country)\r\n      .then((resp)=>{\r\n        return resp.json();\r\n      })\r\n      .then((data)=>{\r\n        dispatch({\r\n          type:\"historicalData\",\r\n          payload:data\r\n        })\r\n\r\n        setisDataPresent_country(true);\r\n      })\r\n    }\r\n  },[state.country])\r\n\r\n  if(isdataPresent){\r\n    Object.keys(state.historicalData[evaluate_type]).forEach((key)=>{\r\n      date = [...date, key];\r\n      data = [...data, state.historicalData[evaluate_type][key]];\r\n    })\r\n  }\r\n  else if(isdataPresent_country){\r\n    Object.keys(state.historicalData[\"timeline\"][evaluate_type]).forEach((key)=>{\r\n      date = [...date, key];\r\n      data = [...data, state.historicalData.timeline[evaluate_type][key]];\r\n      \r\n    })\r\n  }\r\n\r\n  sortedData = SorterGraphData(data);\r\n   let value = {\r\n      labels:date,\r\n      datasets:[{\r\n        label:`number of ${state.caseValue} per day`,\r\n        data:sortedData,\r\n        backgroundColor:'rgb(204,16,52,0.8)',\r\n        borderColor:'#CC1034',\r\n        pointRadius: 0.5,\r\n      }]\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <Line \r\n    data = {value} \r\n    />    \r\n  </>\r\n  )\r\n}\r\n\r\nexport default LineGraph;\r\n","import React, { useState } from 'react';\r\n\r\nimport \"./Map.css\";\r\n\r\nimport { Map as MapLeaflet, TileLayer} from 'react-leaflet'; \r\nimport { useContext, useRef } from 'react';\r\nimport { CounterStateContext } from './App';\r\nimport { ShowDataOnMap} from './utils/Sorter';\r\nimport { Popup } from 'react-leaflet';\r\nconst Mapx = () => {\r\n  let center = [51.505,-0.09];\r\n  let zoom = 2;\r\n\r\n  const refContainer = useRef([51.505,-0.09]);\r\n  const zoomContainer = useRef(2);\r\n\r\n  const {country, singleCountryInfo} = useContext(CounterStateContext);\r\n\r\n  if(country === \"worldwide\"){\r\n    refContainer.current = center;\r\n    zoomContainer.current = zoom;\r\n  }\r\n\r\n  else if(singleCountryInfo.countryInfo){  \r\n    if(singleCountryInfo.countryInfo.iso2 === country){\r\n      refContainer.current = [singleCountryInfo.countryInfo.lat, singleCountryInfo.countryInfo.long];\r\n      zoomContainer.current = 5;\r\n    }\r\n  }\r\n  \r\n    return (\r\n    <div className = \"map\">\r\n    <MapLeaflet center= {refContainer.current} zoom={zoomContainer.current}>\r\n      <TileLayer\r\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n\r\n      <ShowDataOnMap/>\r\n\r\n\r\n    </MapLeaflet>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Mapx;","import React from 'react'\r\nimport { CounterDispatchContext } from './App';\r\n\r\nconst StatsDisplay = ({data1, data2, data3}) => {\r\n\r\n  const dispatch = React.useContext(CounterDispatchContext);\r\n\r\n  return (\r\n    <div className= \"case__left__stats\" id = {data1} onClick = {e=>{\r\n      dispatch({\r\n      type: \"casesValue\",\r\n      payload:data1,\r\n    })\r\n    }}>\r\n      <h3>{data1}</h3>\r\n      <h1>{data2}</h1>\r\n      <h6>{data3} Total</h6>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StatsDisplay;","import React, { useContext } from 'react';\r\nimport { CounterStateContext } from './App';\r\nimport {Sorter} from './utils/Sorter';\r\n\r\nconst CountryList = () => {\r\n  let sortedCountryData = [];\r\n\r\n  const state = useContext(CounterStateContext);\r\n  const {countryData} = state\r\n  sortedCountryData = Sorter(countryData)\r\n  return (\r\n    <div className= \"case__right__sidebar\">\r\n      <h2>Live Cases by Country</h2>\r\n      <div className = \"case__right__table\">\r\n        {sortedCountryData.map((country)=>{\r\n          return (\r\n            <tr key= {country.countryInfo._id + 'new'} className=\"\">\r\n            <td>{country.country}</td>\r\n            <td>{country.cases}</td>\r\n          </tr>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default CountryList\r\n","import React, { useContext } from 'react'\r\nimport {FormControl , Select, MenuItem} from \"@material-ui/core\"\r\nimport { CounterDispatchContext, CounterStateContext } from './App'\r\n\r\nconst HeaderVaccine = ()=>{\r\n  const dispatch = useContext(CounterDispatchContext);\r\n  const state = useContext(CounterStateContext);\r\n  const {vaccineCountryList} = state;\r\n  return (\r\n    <>\r\n    <div className = \"header\">\r\n      <div className=\"header__name\">VACCINE TRACKER</div>\r\n      <div className=\"header__dropdown\">\r\n      \r\n        <FormControl className = \"header__dropdown_material\">\r\n          \r\n          <Select  variant = \"outlined\" value = {state.country_vaccine} onChange = {e=>{\r\n           dispatch({\r\n              type: 'Vaccine_country',\r\n              payload:e.target.value});\r\n          }\r\n          }>\r\n            \r\n            <MenuItem value = \"worldwide\">WorldWide</MenuItem>\r\n            {vaccineCountryList.map((item)=>{\r\n              return <MenuItem \r\n              value ={item.country}>\r\n                {item.country} \r\n              </MenuItem>\r\n            })}\r\n          </Select>\r\n          \r\n        </FormControl>\r\n      </div>\r\n      \r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeaderVaccine;","import React, { useContext, useEffect ,useState} from 'react'\r\nimport { CounterStateContext, CounterDispatchContext } from './App'\r\nimport { SorterGraphData } from './utils/Sorter';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { fetchVaccine_worldwide, fetchVaccine_CountryWise} from './Fetch';\r\n\r\nconst LineGraph_vaccine = () => {\r\n\r\n  const state = useContext(CounterStateContext);\r\n  const dispatch = useContext(CounterDispatchContext);\r\n  \r\n  const {singleCountry_data_vaccine} = state;\r\n\r\n  const [isdataPresent, setisDataPresent] = useState(false)\r\n  const [isdataPresent_country,setisDataPresent_country] = useState(false);\r\n\r\n  let date = [];\r\n  let data = [];\r\n  let vaccine_data_sorted = [];\r\n\r\n  useEffect(()=>{\r\n      if(state.country_vaccine === \"worldwide\"){\r\n        setisDataPresent_country(false);\r\n        fetchVaccine_worldwide()\r\n        .then(resp=>resp.json())\r\n        .then(data=>{\r\n          dispatch({\r\n            type:\"singleCountryInfo_vaccine\",\r\n            payload:data\r\n          })\r\n          setisDataPresent(true);\r\n        })\r\n      }\r\n      else{\r\n        setisDataPresent(false);\r\n        fetchVaccine_CountryWise(state.country_vaccine)\r\n        .then(resp=>resp.json())\r\n        .then(data=>{\r\n          dispatch({\r\n            type:\"singleCountryInfo_vaccine\",\r\n            payload:data\r\n          })\r\n          setisDataPresent_country(true);\r\n        })\r\n      }  \r\n  },[state.country_vaccine]);\r\n  \r\n  if(isdataPresent){\r\n    Object.keys(singleCountry_data_vaccine).forEach((key)=>{\r\n      date = [...date, key];\r\n      data = [...data, singleCountry_data_vaccine[key]]\r\n    })\r\n  }\r\n  else if(isdataPresent_country){\r\n    Object.keys(singleCountry_data_vaccine.timeline).forEach((key)=>{\r\n      date = [...date, key];\r\n      data = [...data, singleCountry_data_vaccine.timeline[key]]\r\n    })\r\n  }\r\n\r\n  vaccine_data_sorted = SorterGraphData(data);\r\n   \r\n  let value = {\r\n    labels:date,\r\n    datasets:[{\r\n      label:\"number of vaccinations daily\",\r\n      data:vaccine_data_sorted,\r\n      backgroundColor:'rgb(204,16,52,0.8)',\r\n      borderColor:'#CC1034',\r\n      pointRadius: 0.5,\r\n    }]\r\n   }\r\n  return (\r\n    <div>\r\n      <Line\r\n      data = {value}\r\n      ></Line>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineGraph_vaccine\r\n","import moment from \"moment\";\r\n\r\nconst DateCreator = ()=>{\r\n  var d = new Date();\r\n  d.setDate(d.getDate() - 1);\r\n  return moment(d).format('M/DD/YY');\r\n}\r\n\r\nexport default DateCreator;\r\n","import React from 'react'\r\nimport {sidebarContent} from './sidebarContent'\r\nimport { sorter_vaccine } from './utils/sorter_vaccine'\r\n\r\nconst SideBar = () => {\r\n\r\n  let content = sidebarContent();\r\n  let sortedList = sorter_vaccine(content);\r\n\r\n  return (\r\n    <div className= \"vaccine__right__sidebar\">\r\n      <h2>Live Vaccination by Country</h2>\r\n      <div className = \"vaccine__right__table\">\r\n        {sortedList.map((country_vaccine)=>{\r\n          return (\r\n            <tr  className=\"\">\r\n            <td>{country_vaccine.country}</td>\r\n            <td>{country_vaccine.data}</td>\r\n          </tr>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SideBar\r\n","import { useContext } from \"react\"\r\n\r\nimport { CounterDispatchContext, CounterStateContext } from \"./App\"\r\n\r\nimport  DateCreator from './utils/DateCreator';\r\n\r\nexport const sidebarContent = ()=>{\r\n  let date = [];\r\n  let data = [];\r\n\r\n  const state = useContext(CounterStateContext);\r\n\r\n  const {vaccineCountryList} = state;\r\n\r\n  vaccineCountryList.map((item)=>{\r\n    let date = DateCreator();\r\n    \r\n    data = [...data, {\r\n        country:item.country,\r\n      data:item.timeline[date],\r\n    }]\r\n  })\r\n\r\n\r\n  return data;\r\n}\r\n","export const sorter_vaccine = (item)=>{\r\n  let sortedList = item.sort((a,b)=>{\r\n    if(a.data>b.data){\r\n      return -1\r\n    }\r\n    else{\r\n      return 1;\r\n    }\r\n  })\r\n  return sortedList;\r\n}","import { useEffect , useState} from \"react\"\r\nimport { fetchVaccine_worldwide } from \"./Fetch\"\r\nimport DateCreator from './utils/DateCreator';\r\n\r\nconst StatsDisplay_vaccine = ()=>{\r\n  let [stats , setStats] = useState([])\r\n  useEffect(()=>{\r\n    fetchVaccine_worldwide()\r\n    .then(resp=>resp.json())\r\n    .then(data=>{\r\n      setStats(data);\r\n    })\r\n  },[])\r\n  let date = DateCreator();\r\n  return (\r\n    <div className=\"case_left_stats_vaccine\">\r\n      <h3>Total Vaccination Done Worldwide </h3>\r\n      <h1>{stats[date]}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StatsDisplay_vaccine;","import React, { useContext , useEffect, useState} from 'react'\r\nimport {CounterStateContext, CounterDispatchContext} from './App';\r\n\r\nimport {fetchCountryName_n_Data, fetch_Stats_singleCountry, fetch_state_worldwide, fetchVaccineData, fetchVaccine_worldwide, fetchVaccine_CountryWise} from './Fetch';\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport Header from './Header';\r\nimport LineGraph from './LineGraph';\r\nimport Map from './Map';\r\nimport StatsDisplay from './StatsDisplay';\r\nimport CountryList from './CountryList';\r\nimport HeaderVaccine from './HeaderVaccine';\r\nimport LineGraph_vaccine from './LineGraph_vaccine';\r\nimport SideBar from './SideBar';\r\nimport StatsDisplay_vaccine from './StatsDisplay_vaccine';\r\n\r\nfunction Comp1({isToggleOn}) {\r\n\r\n  const state  = useContext(CounterStateContext);\r\n  const dispatch = useContext(CounterDispatchContext);\r\n\r\n  const {country} = state;\r\n  useEffect(() => {\r\n    if(isToggleOn)\r\n    {\r\n      fetchCountryName_n_Data().then((resp)=>{\r\n        return resp.json();\r\n      }).then((data)=>{\r\n        dispatch({\r\n          type:\"country_info\",\r\n          payload:data,\r\n        })\r\n      })\r\n  }\r\n  }, [isToggleOn])\r\n  \r\n  useEffect(() => {\r\n  if(isToggleOn){\r\n    if(country === \"worldwide\"){\r\n      fetch_state_worldwide()\r\n      .then((resp)=>resp.json())\r\n      .then(data=>{\r\n        dispatch({\r\n          type:\"single_country_info\",\r\n          payload:data,\r\n        })\r\n        \r\n      })\r\n    }\r\n    else{\r\n      fetch_Stats_singleCountry(country)\r\n      .then((resp)=>resp.json())\r\n      .then(data=>{\r\n      dispatch({\r\n        type:\"single_country_info\",\r\n        payload:data,\r\n      })\r\n    })}\r\n    }}, [country,isToggleOn])\r\n  \r\n  useEffect(()=>{\r\n    if(!isToggleOn){\r\n      fetchVaccineData()\r\n      .then((resp)=>resp.json())\r\n      .then(data=>{\r\n        dispatch({\r\n          type:\"worldwide_VaccineInfo\",\r\n          payload:data\r\n        })\r\n      })\r\n    }\r\n  },[isToggleOn])\r\n\r\n  \r\n  \r\n  return (\r\n  <div className = \"container\">\r\n    {isToggleOn && <div className=\"case\">\r\n      <div className=\"case__left\">\r\n\r\n        <Header />\r\n        <div className=\"case__stats_display\">\r\n          <StatsDisplay \r\n          data1=\"CoronaVirus Cases\" \r\n          data2 = {state.singleCountryInfo.todayCases} \r\n          data3= {state.singleCountryInfo.cases}\r\n          \r\n          />\r\n          <StatsDisplay\r\n          data1 = \"Recovered\"\r\n          data2 = {state.singleCountryInfo.todayRecovered}\r\n          data3 = {state.singleCountryInfo.recovered}\r\n          />\r\n          <StatsDisplay\r\n          data1 = \"Deaths\"\r\n          data2 = {state.singleCountryInfo.todayDeaths}\r\n          data3 = {state.singleCountryInfo.deaths}\r\n          />\r\n        </div>\r\n        <Map />\r\n      </div>\r\n      <div className=\"case__right\">\r\n        <CountryList/>\r\n        <LineGraph/>\r\n      </div>\r\n    </div>}\r\n    {!isToggleOn && <div className= \"vaccine\">\r\n      <div className=\"vaccine__left\">\r\n        <HeaderVaccine />\r\n        <StatsDisplay_vaccine />\r\n        <LineGraph_vaccine />\r\n      </div>\r\n      <div className=\"vaccine_right\">\r\n        <SideBar />\r\n      </div>\r\n    </div>}\r\n  </div>\r\n  )\r\n}\r\nexport default Comp1;","import React, {useReducer, useState} from 'react'\r\nimport { initialState, reducer } from './reducer';\r\nimport Comp1 from './Comp1';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport \"./App.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport ToggleOffOutlinedIcon from '@material-ui/icons/ToggleOffOutlined';\r\nimport ToggleOnOutlinedIcon from '@material-ui/icons/ToggleOnOutlined';\r\n\r\nexport const CounterStateContext = React.createContext();\r\nexport const CounterDispatchContext = React.createContext();\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [isToggleOn , setIsToggleOn] = useState(false);\r\n\r\n  return (\r\n    <CounterStateContext.Provider \r\n    value= {state}>\r\n      <CounterDispatchContext.Provider value = {dispatch}>\r\n      \r\n      <CSSTransition in={isToggleOn} timeout = {100} classNames = \"my-node\">\r\n        <div>\r\n          <div className=\"header__mast__head\">\r\n            <span>\r\n            VACCINE TRACKER\r\n            </span>\r\n            <span  className = \"toggler\" onClick = {()=>{\r\n              setIsToggleOn(!isToggleOn);\r\n            }}>\r\n              {isToggleOn?<ToggleOnOutlinedIcon/>:<ToggleOffOutlinedIcon/>}\r\n            </span>\r\n            <span>\r\n            CORONA TRACKER\r\n            </span>\r\n          </div>\r\n          <Comp1 isToggleOn = {isToggleOn}/>\r\n        </div>\r\n      </CSSTransition>\r\n      </CounterDispatchContext.Provider>\r\n    </CounterStateContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './Components/App'\r\n\r\nconst Index = ()=>{\r\n  return (\r\n    <App/>\r\n  )\r\n}\r\nReactDOM.render(<Index/>, document.getElementById('root'));"],"sourceRoot":""}